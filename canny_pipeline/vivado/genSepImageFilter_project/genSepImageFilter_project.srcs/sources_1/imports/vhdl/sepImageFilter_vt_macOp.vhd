-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sepImageFilter_vt_macOp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    vt_coeff_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    vt_coeff_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
    vt_coeff_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    vt_coeff_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
    vt_coeff_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
    vt_coeff_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
    vt_coeff_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
    vt_window_pixels_0_V : IN STD_LOGIC_VECTOR (26 downto 0);
    vt_window_pixels_1_V : IN STD_LOGIC_VECTOR (26 downto 0);
    vt_window_pixels_2_V : IN STD_LOGIC_VECTOR (26 downto 0);
    vt_window_pixels_3_V : IN STD_LOGIC_VECTOR (26 downto 0);
    vt_window_pixels_4_V : IN STD_LOGIC_VECTOR (26 downto 0);
    vt_window_pixels_5_V : IN STD_LOGIC_VECTOR (26 downto 0);
    vt_window_pixels_6_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (36 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of sepImageFilter_vt_macOp is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal vt_window_pixels_6_V_read_1_reg_276 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal vt_window_pixels_4_V_read_1_reg_281 : STD_LOGIC_VECTOR (26 downto 0);
    signal vt_window_pixels_3_V_read_1_reg_286 : STD_LOGIC_VECTOR (26 downto 0);
    signal vt_window_pixels_1_V_read_1_reg_291 : STD_LOGIC_VECTOR (26 downto 0);
    signal vt_coeff_6_V_read_1_reg_296 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter4 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_coeff_4_V_read_1_reg_301 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_coeff_3_V_read_1_reg_306 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_coeff_1_V_read_1_reg_311 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_130_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_reg_376 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_144_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_2_reg_381 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_158_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_5_reg_386 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_182_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_3_reg_391 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_fu_194_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_4_reg_396 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_fu_232_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_reg_401 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_reg_ppstg_tmp_reg_401_pp0_iter6 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp4_fu_238_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp4_reg_406 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp2_fu_258_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp2_reg_411 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_170_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_1_fu_210_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_6_fu_217_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_2_cast_fu_207_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_5_cast_fu_200_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_5_1_cast_fu_203_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp1_fu_226_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_6_cast_fu_222_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_5_4_cast_fu_246_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_5_3_cast_fu_243_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp3_fu_249_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp4_cast5_fu_255_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_cast_fu_264_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp2_cast_fu_267_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_130_ce : STD_LOGIC;
    signal grp_fu_144_ce : STD_LOGIC;
    signal grp_fu_158_ce : STD_LOGIC;
    signal grp_fu_170_ce : STD_LOGIC;
    signal grp_fu_182_ce : STD_LOGIC;
    signal grp_fu_194_ce : STD_LOGIC;

    component sepImageFilter_mul_8s_27s_35_5 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;



begin
    sepImageFilter_mul_8s_27s_35_5_U106 : component sepImageFilter_mul_8s_27s_35_5
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 8,
        din1_WIDTH => 27,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vt_coeff_0_V,
        din1 => vt_window_pixels_0_V,
        ce => grp_fu_130_ce,
        dout => grp_fu_130_p2);

    sepImageFilter_mul_8s_27s_35_5_U107 : component sepImageFilter_mul_8s_27s_35_5
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 8,
        din1_WIDTH => 27,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vt_coeff_2_V,
        din1 => vt_window_pixels_2_V,
        ce => grp_fu_144_ce,
        dout => grp_fu_144_p2);

    sepImageFilter_mul_8s_27s_35_5_U108 : component sepImageFilter_mul_8s_27s_35_5
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 8,
        din1_WIDTH => 27,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vt_coeff_5_V,
        din1 => vt_window_pixels_5_V,
        ce => grp_fu_158_ce,
        dout => grp_fu_158_p2);

    sepImageFilter_mul_8s_27s_35_5_U109 : component sepImageFilter_mul_8s_27s_35_5
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 8,
        din1_WIDTH => 27,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vt_coeff_1_V_read_1_reg_311,
        din1 => vt_window_pixels_1_V_read_1_reg_291,
        ce => grp_fu_170_ce,
        dout => grp_fu_170_p2);

    sepImageFilter_mul_8s_27s_35_5_U110 : component sepImageFilter_mul_8s_27s_35_5
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 8,
        din1_WIDTH => 27,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vt_coeff_3_V_read_1_reg_306,
        din1 => vt_window_pixels_3_V_read_1_reg_286,
        ce => grp_fu_182_ce,
        dout => grp_fu_182_p2);

    sepImageFilter_mul_8s_27s_35_5_U111 : component sepImageFilter_mul_8s_27s_35_5
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 8,
        din1_WIDTH => 27,
        dout_WIDTH => 35)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => vt_coeff_4_V_read_1_reg_301,
        din1 => vt_window_pixels_4_V_read_1_reg_281,
        ce => grp_fu_194_ce,
        dout => grp_fu_194_p2);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                ap_reg_ppstg_tmp_reg_401_pp0_iter6 <= tmp_reg_401;
                ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter1 <= vt_coeff_6_V_read_1_reg_296;
                ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter2 <= ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter1;
                ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter3 <= ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter2;
                ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter4 <= ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter3;
                ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter1 <= vt_window_pixels_6_V_read_1_reg_276;
                ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter2 <= ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter1;
                ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter3 <= ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter2;
                ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter4 <= ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter3;
                r_V_2_reg_381 <= grp_fu_144_p2;
                r_V_3_reg_391 <= grp_fu_182_p2;
                r_V_4_reg_396 <= grp_fu_194_p2;
                r_V_5_reg_386 <= grp_fu_158_p2;
                r_V_reg_376 <= grp_fu_130_p2;
                tmp2_reg_411 <= tmp2_fu_258_p2;
                tmp4_reg_406 <= tmp4_fu_238_p2;
                tmp_reg_401 <= tmp_fu_232_p2;
                vt_coeff_1_V_read_1_reg_311 <= vt_coeff_1_V;
                vt_coeff_3_V_read_1_reg_306 <= vt_coeff_3_V;
                vt_coeff_4_V_read_1_reg_301 <= vt_coeff_4_V;
                vt_coeff_6_V_read_1_reg_296 <= vt_coeff_6_V;
                vt_window_pixels_1_V_read_1_reg_291 <= vt_window_pixels_1_V;
                vt_window_pixels_3_V_read_1_reg_286 <= vt_window_pixels_3_V;
                vt_window_pixels_4_V_read_1_reg_281 <= vt_window_pixels_4_V;
                vt_window_pixels_6_V_read_1_reg_276 <= vt_window_pixels_6_V;
            end if;
        end if;
    end process;
    ap_return <= std_logic_vector(signed(tmp_cast_fu_264_p1) + signed(tmp2_cast_fu_267_p1));

    grp_fu_130_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_130_ce <= ap_const_logic_0;
        else 
            grp_fu_130_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_144_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_144_ce <= ap_const_logic_0;
        else 
            grp_fu_144_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_158_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_158_ce <= ap_const_logic_0;
        else 
            grp_fu_158_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_170_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_170_ce <= ap_const_logic_0;
        else 
            grp_fu_170_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_182_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_182_ce <= ap_const_logic_0;
        else 
            grp_fu_182_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_194_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_fu_194_ce <= ap_const_logic_0;
        else 
            grp_fu_194_ce <= ap_const_logic_1;
        end if; 
    end process;

        r_V_6_cast_fu_222_p1 <= std_logic_vector(resize(signed(r_V_6_fu_217_p2),35));

    r_V_6_fu_217_p2 <= (ap_reg_ppstg_vt_coeff_6_V_read_1_reg_296_pp0_iter4 and tmp_1_fu_210_p3);
    tmp1_fu_226_p2 <= std_logic_vector(signed(tmp_5_2_cast_fu_207_p1) + signed(tmp_5_cast_fu_200_p1));
        tmp2_cast_fu_267_p1 <= std_logic_vector(resize(signed(tmp2_reg_411),37));

    tmp2_fu_258_p2 <= std_logic_vector(unsigned(tmp3_fu_249_p2) + unsigned(tmp4_cast5_fu_255_p1));
    tmp3_fu_249_p2 <= std_logic_vector(signed(tmp_5_4_cast_fu_246_p1) + signed(tmp_5_3_cast_fu_243_p1));
        tmp4_cast5_fu_255_p1 <= std_logic_vector(resize(signed(tmp4_reg_406),36));

    tmp4_fu_238_p2 <= std_logic_vector(signed(r_V_6_cast_fu_222_p1) + signed(r_V_5_reg_386));
    tmp_1_fu_210_p3 <= 
        ap_const_lv8_FF when (ap_reg_ppstg_vt_window_pixels_6_V_read_1_reg_276_pp0_iter4(0) = '1') else 
        ap_const_lv8_0;
        tmp_5_1_cast_fu_203_p1 <= std_logic_vector(resize(signed(grp_fu_170_p2),36));

        tmp_5_2_cast_fu_207_p1 <= std_logic_vector(resize(signed(r_V_2_reg_381),36));

        tmp_5_3_cast_fu_243_p1 <= std_logic_vector(resize(signed(r_V_3_reg_391),36));

        tmp_5_4_cast_fu_246_p1 <= std_logic_vector(resize(signed(r_V_4_reg_396),36));

        tmp_5_cast_fu_200_p1 <= std_logic_vector(resize(signed(r_V_reg_376),36));

        tmp_cast_fu_264_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_tmp_reg_401_pp0_iter6),37));

    tmp_fu_232_p2 <= std_logic_vector(signed(tmp_5_1_cast_fu_203_p1) + signed(tmp1_fu_226_p2));
end behav;
