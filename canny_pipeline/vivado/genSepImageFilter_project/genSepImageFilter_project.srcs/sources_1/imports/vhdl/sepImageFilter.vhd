-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sepImageFilter is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 9;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    video_in_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    video_in_TVALID : IN STD_LOGIC;
    video_in_TREADY : OUT STD_LOGIC;
    video_in_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
    video_in_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
    video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_out_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    video_out_TVALID : OUT STD_LOGIC;
    video_out_TREADY : IN STD_LOGIC;
    video_out_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
    video_out_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    video_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    video_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    video_out_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    video_out_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sepImageFilter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sepImageFilter,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.903625,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=18,HLS_SYN_DSP=20,HLS_SYN_FF=6559,HLS_SYN_LUT=5222}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_pp0_stg0_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st67_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv21_4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_24 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal IMG_WIDTH_V : STD_LOGIC_VECTOR (10 downto 0);
    signal IMG_HEIGHT_V : STD_LOGIC_VECTOR (10 downto 0);
    signal hz_kernels_0_0_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_0_1_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_0_2_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_0_3_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_0_4_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_0_5_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_0_6_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_1_0_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_1_1_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_1_2_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_1_3_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_1_4_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_1_5_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_1_6_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_2_0_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_2_1_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_2_2_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_2_3_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_2_4_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_2_5_V : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernels_2_6_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_0_0_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_0_1_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_0_2_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_0_3_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_0_4_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_0_5_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_0_6_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_1_0_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_1_1_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_1_2_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_1_3_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_1_4_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_1_5_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_1_6_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_2_0_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_2_1_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_2_2_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_2_3_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_2_4_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_2_5_V : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernels_2_6_V : STD_LOGIC_VECTOR (7 downto 0);
    signal config_V : STD_LOGIC_VECTOR (7 downto 0);
    signal divisor_0_V : STD_LOGIC_VECTOR (19 downto 0);
    signal divisor_1_V : STD_LOGIC_VECTOR (19 downto 0);
    signal divisor_2_V : STD_LOGIC_VECTOR (19 downto 0);
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TDATA_blk_n : STD_LOGIC;
    signal video_in_TDATA_blk_n : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it31 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it32 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it33 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it34 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it35 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it36 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it37 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it38 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it39 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it40 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it41 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it42 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it43 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it44 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it45 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it46 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it47 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it48 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it49 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it50 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it51 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it52 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it53 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it54 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it55 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it56 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it57 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it58 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it59 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it60 : STD_LOGIC := '0';
    signal exitcond_reg_1067 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA_blk_n : STD_LOGIC;
    signal video_out_TDATA_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter59 : STD_LOGIC_VECTOR (0 downto 0);
    signal pixelIn_V_reg_520 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_reg_532 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_2_reg_544 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_p_2_reg_544_pp0_iter1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_5 : STD_LOGIC;
    signal ap_sig_279 : BOOLEAN;
    signal ap_sig_283 : BOOLEAN;
    signal ap_sig_287 : BOOLEAN;
    signal ap_reg_ppstg_p_2_reg_544_pp0_iter2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_p_2_reg_544_pp0_iter3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_p_2_reg_544_pp0_iter4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_p_2_reg_544_pp0_iter5 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_p_2_reg_544_pp0_iter6 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_p_2_reg_544_pp0_iter7 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_9_reg_556 : STD_LOGIC_VECTOR (20 downto 0);
    signal IMG_HEIGHT_V_read_reg_951 : STD_LOGIC_VECTOR (10 downto 0);
    signal IMG_WIDTH_V_read_reg_956 : STD_LOGIC_VECTOR (10 downto 0);
    signal div_V_reg_962 : STD_LOGIC_VECTOR (19 downto 0);
    signal hz_kernel_0_V_reg_967 : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernel_1_V_reg_972 : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernel_2_V_reg_977 : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernel_3_V_reg_982 : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernel_4_V_reg_987 : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernel_5_V_reg_992 : STD_LOGIC_VECTOR (7 downto 0);
    signal hz_kernel_6_V_reg_997 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernel_0_V_reg_1002 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernel_1_V_reg_1007 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernel_2_V_reg_1012 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernel_3_V_reg_1017 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernel_4_V_reg_1022 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernel_5_V_reg_1027 : STD_LOGIC_VECTOR (7 downto 0);
    signal vt_kernel_6_V_reg_1032 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_847_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_reg_1037 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_reg_1042 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_357 : BOOLEAN;
    signal grp_fu_867_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_1_reg_1057 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_368 : BOOLEAN;
    signal tmp_2_fu_873_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_2_reg_1062 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_377 : BOOLEAN;
    signal exitcond_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter40 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter41 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter42 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter43 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter44 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter45 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter46 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter47 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter48 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter49 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter50 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter51 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter52 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter53 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter54 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter55 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter56 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter57 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_1067_pp0_iter58 : STD_LOGIC_VECTOR (0 downto 0);
    signal indxPixel_V_fu_883_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal indxCol_V_fu_889_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indxCol_V_reg_1076 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1081 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_906_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_s_reg_1087 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_s_6_fu_913_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ctrl_signals_start_output_V_reg_1097 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter40 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter41 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter42 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter43 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter44 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter45 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter46 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter47 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter48 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter49 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter50 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter51 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter52 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter53 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter54 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter55 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter56 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter57 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter58 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_signals_finish_reads_V_reg_1102 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_signals_out_row_end_V_reg_1107 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter40 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter41 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter42 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter43 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter44 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter45 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter46 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter47 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter48 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter49 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter50 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter51 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter52 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter53 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter54 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter55 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter56 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter57 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter58 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_signals_end_row_V_reg_1112 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_end_row_V_reg_1112_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_signals_new_row_V_reg_1117 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_new_row_V_reg_1117_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_signals_end_columns_V_reg_1122 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_signals_reset_V_reg_1127 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_signals_row_to_duplicate_s_reg_1132 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter5 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter7 : STD_LOGIC_VECTOR (2 downto 0);
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal pixelIn_V_1_reg_1137 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sepImageFilter_division_fu_567_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sepImageFilter_division_fu_567_ap_ce : STD_LOGIC;
    signal grp_sepImageFilter_vt_filter_fu_574_ap_start : STD_LOGIC;
    signal grp_sepImageFilter_vt_filter_fu_574_ap_done : STD_LOGIC;
    signal grp_sepImageFilter_vt_filter_fu_574_ap_idle : STD_LOGIC;
    signal grp_sepImageFilter_vt_filter_fu_574_ap_ready : STD_LOGIC;
    signal grp_sepImageFilter_vt_filter_fu_574_ap_ce : STD_LOGIC;
    signal grp_sepImageFilter_vt_filter_fu_574_ap_return : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_sepImageFilter_hz_filter_fu_593_ap_start : STD_LOGIC;
    signal grp_sepImageFilter_hz_filter_fu_593_ap_done : STD_LOGIC;
    signal grp_sepImageFilter_hz_filter_fu_593_ap_idle : STD_LOGIC;
    signal grp_sepImageFilter_hz_filter_fu_593_ap_ready : STD_LOGIC;
    signal grp_sepImageFilter_hz_filter_fu_593_ap_ce : STD_LOGIC;
    signal grp_sepImageFilter_hz_filter_fu_593_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_select_V : STD_LOGIC_VECTOR (5 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_0 : STD_LOGIC_VECTOR (19 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret_sepImageFilter_kernelSel_fu_626_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_start : STD_LOGIC;
    signal grp_sepImageFilter_controlUnit_fu_721_ap_done : STD_LOGIC;
    signal grp_sepImageFilter_controlUnit_fu_721_ap_idle : STD_LOGIC;
    signal grp_sepImageFilter_controlUnit_fu_721_ap_ready : STD_LOGIC;
    signal grp_sepImageFilter_controlUnit_fu_721_ap_ce : STD_LOGIC;
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_5 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_6 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_controlUnit_fu_721_ap_return_7 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_ap_start : STD_LOGIC;
    signal grp_sepImageFilter_axisInt_out_fu_738_ap_done : STD_LOGIC;
    signal grp_sepImageFilter_axisInt_out_fu_738_ap_idle : STD_LOGIC;
    signal grp_sepImageFilter_axisInt_out_fu_738_ap_ready : STD_LOGIC;
    signal grp_sepImageFilter_axisInt_out_fu_738_ap_ce : STD_LOGIC;
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TVALID : STD_LOGIC;
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TKEEP : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sepImageFilter_axisInt_out_fu_738_video_out_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start : STD_LOGIC;
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_done : STD_LOGIC;
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_idle : STD_LOGIC;
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ready : STD_LOGIC;
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TREADY : STD_LOGIC;
    signal pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ce : STD_LOGIC;
    signal pixelIn_V_phi_fu_524_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_phi_fu_536_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_2_phi_fu_548_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_grp_sepImageFilter_vt_filter_fu_574_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_sepImageFilter_hz_filter_fu_593_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_sepImageFilter_controlUnit_fu_721_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_sepImageFilter_axisInt_out_fu_738_ap_start : STD_LOGIC := '0';
    signal ap_reg_pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start : STD_LOGIC := '0';
    signal grp_fu_867_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_867_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal indxRow_V_fu_900_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st67_fsm_6 : STD_LOGIC;
    signal ap_sig_1413 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_867_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_867_p10 : STD_LOGIC_VECTOR (20 downto 0);

    component sepImageFilter_division IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        vt_pixelOut_V : IN STD_LOGIC_VECTOR (36 downto 0);
        div_V : IN STD_LOGIC_VECTOR (19 downto 0);
        norm_V : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component sepImageFilter_vt_filter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        hz_pixelOut_V : IN STD_LOGIC_VECTOR (26 downto 0);
        end_columns_V : IN STD_LOGIC_VECTOR (0 downto 0);
        row_to_duplicate_V : IN STD_LOGIC_VECTOR (2 downto 0);
        vt_coeff_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_coeff_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_coeff_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_coeff_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_coeff_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_coeff_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_coeff_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        col_V : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component sepImageFilter_hz_filter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        pixelIn_V : IN STD_LOGIC_VECTOR (15 downto 0);
        end_row_V : IN STD_LOGIC_VECTOR (0 downto 0);
        new_row_V : IN STD_LOGIC_VECTOR (0 downto 0);
        hz_coeff_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_coeff_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_coeff_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_coeff_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_coeff_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_coeff_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_coeff_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component sepImageFilter_kernelSel IS
    port (
        select_V : IN STD_LOGIC_VECTOR (5 downto 0);
        hz_kernels_0_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_3_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_4_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_5_V : IN STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_6_V : IN STD_LOGIC_VECTOR (7 downto 0);
        divisor_0_V : IN STD_LOGIC_VECTOR (19 downto 0);
        divisor_1_V : IN STD_LOGIC_VECTOR (19 downto 0);
        divisor_2_V : IN STD_LOGIC_VECTOR (19 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sepImageFilter_controlUnit IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        row_V : IN STD_LOGIC_VECTOR (10 downto 0);
        col_V : IN STD_LOGIC_VECTOR (10 downto 0);
        height_V : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component sepImageFilter_axisInt_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        video_out_TREADY : IN STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        pixelOut_V : IN STD_LOGIC_VECTOR (15 downto 0);
        start_output_V : IN STD_LOGIC_VECTOR (0 downto 0);
        out_row_end_V : IN STD_LOGIC_VECTOR (0 downto 0);
        video_out_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        video_out_TVALID : OUT STD_LOGIC;
        video_out_TKEEP : OUT STD_LOGIC_VECTOR (1 downto 0);
        video_out_TSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        video_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        video_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        video_out_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        video_out_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
        video_out_TDATA_blk_n : OUT STD_LOGIC );
    end component;


    component sepImageFilter_axisInt_in IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        video_in_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        video_in_TVALID : IN STD_LOGIC;
        video_in_TREADY : OUT STD_LOGIC;
        video_in_TKEEP : IN STD_LOGIC_VECTOR (1 downto 0);
        video_in_TSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        video_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        video_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        finish_reads_V : IN STD_LOGIC_VECTOR (0 downto 0);
        reset_V : IN STD_LOGIC_VECTOR (0 downto 0);
        pixelIn_V : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        video_in_TDATA_blk_n : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC );
    end component;


    component sepImageFilter_mul_11ns_11ns_21_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component sepImageFilter_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        IMG_WIDTH_V : OUT STD_LOGIC_VECTOR (10 downto 0);
        IMG_HEIGHT_V : OUT STD_LOGIC_VECTOR (10 downto 0);
        hz_kernels_0_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_5_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_0_6_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_5_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_1_6_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_5_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        hz_kernels_2_6_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_5_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_0_6_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_5_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_1_6_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_5_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        vt_kernels_2_6_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        config_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        divisor_0_V : OUT STD_LOGIC_VECTOR (19 downto 0);
        divisor_1_V : OUT STD_LOGIC_VECTOR (19 downto 0);
        divisor_2_V : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    sepImageFilter_CONTROL_BUS_s_axi_U : component sepImageFilter_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        IMG_WIDTH_V => IMG_WIDTH_V,
        IMG_HEIGHT_V => IMG_HEIGHT_V,
        hz_kernels_0_0_V => hz_kernels_0_0_V,
        hz_kernels_0_1_V => hz_kernels_0_1_V,
        hz_kernels_0_2_V => hz_kernels_0_2_V,
        hz_kernels_0_3_V => hz_kernels_0_3_V,
        hz_kernels_0_4_V => hz_kernels_0_4_V,
        hz_kernels_0_5_V => hz_kernels_0_5_V,
        hz_kernels_0_6_V => hz_kernels_0_6_V,
        hz_kernels_1_0_V => hz_kernels_1_0_V,
        hz_kernels_1_1_V => hz_kernels_1_1_V,
        hz_kernels_1_2_V => hz_kernels_1_2_V,
        hz_kernels_1_3_V => hz_kernels_1_3_V,
        hz_kernels_1_4_V => hz_kernels_1_4_V,
        hz_kernels_1_5_V => hz_kernels_1_5_V,
        hz_kernels_1_6_V => hz_kernels_1_6_V,
        hz_kernels_2_0_V => hz_kernels_2_0_V,
        hz_kernels_2_1_V => hz_kernels_2_1_V,
        hz_kernels_2_2_V => hz_kernels_2_2_V,
        hz_kernels_2_3_V => hz_kernels_2_3_V,
        hz_kernels_2_4_V => hz_kernels_2_4_V,
        hz_kernels_2_5_V => hz_kernels_2_5_V,
        hz_kernels_2_6_V => hz_kernels_2_6_V,
        vt_kernels_0_0_V => vt_kernels_0_0_V,
        vt_kernels_0_1_V => vt_kernels_0_1_V,
        vt_kernels_0_2_V => vt_kernels_0_2_V,
        vt_kernels_0_3_V => vt_kernels_0_3_V,
        vt_kernels_0_4_V => vt_kernels_0_4_V,
        vt_kernels_0_5_V => vt_kernels_0_5_V,
        vt_kernels_0_6_V => vt_kernels_0_6_V,
        vt_kernels_1_0_V => vt_kernels_1_0_V,
        vt_kernels_1_1_V => vt_kernels_1_1_V,
        vt_kernels_1_2_V => vt_kernels_1_2_V,
        vt_kernels_1_3_V => vt_kernels_1_3_V,
        vt_kernels_1_4_V => vt_kernels_1_4_V,
        vt_kernels_1_5_V => vt_kernels_1_5_V,
        vt_kernels_1_6_V => vt_kernels_1_6_V,
        vt_kernels_2_0_V => vt_kernels_2_0_V,
        vt_kernels_2_1_V => vt_kernels_2_1_V,
        vt_kernels_2_2_V => vt_kernels_2_2_V,
        vt_kernels_2_3_V => vt_kernels_2_3_V,
        vt_kernels_2_4_V => vt_kernels_2_4_V,
        vt_kernels_2_5_V => vt_kernels_2_5_V,
        vt_kernels_2_6_V => vt_kernels_2_6_V,
        config_V => config_V,
        divisor_0_V => divisor_0_V,
        divisor_1_V => divisor_1_V,
        divisor_2_V => divisor_2_V);

    grp_sepImageFilter_division_fu_567 : component sepImageFilter_division
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        vt_pixelOut_V => grp_sepImageFilter_vt_filter_fu_574_ap_return,
        div_V => div_V_reg_962,
        norm_V => tmp_14_reg_1042,
        ap_return => grp_sepImageFilter_division_fu_567_ap_return,
        ap_ce => grp_sepImageFilter_division_fu_567_ap_ce);

    grp_sepImageFilter_vt_filter_fu_574 : component sepImageFilter_vt_filter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sepImageFilter_vt_filter_fu_574_ap_start,
        ap_done => grp_sepImageFilter_vt_filter_fu_574_ap_done,
        ap_idle => grp_sepImageFilter_vt_filter_fu_574_ap_idle,
        ap_ready => grp_sepImageFilter_vt_filter_fu_574_ap_ready,
        ap_ce => grp_sepImageFilter_vt_filter_fu_574_ap_ce,
        hz_pixelOut_V => grp_sepImageFilter_hz_filter_fu_593_ap_return,
        end_columns_V => ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter7,
        row_to_duplicate_V => ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter7,
        vt_coeff_0_V => vt_kernel_0_V_reg_1002,
        vt_coeff_1_V => vt_kernel_1_V_reg_1007,
        vt_coeff_2_V => vt_kernel_2_V_reg_1012,
        vt_coeff_3_V => vt_kernel_3_V_reg_1017,
        vt_coeff_4_V => vt_kernel_4_V_reg_1022,
        vt_coeff_5_V => vt_kernel_5_V_reg_1027,
        vt_coeff_6_V => vt_kernel_6_V_reg_1032,
        col_V => ap_reg_ppstg_p_2_reg_544_pp0_iter7,
        ap_return => grp_sepImageFilter_vt_filter_fu_574_ap_return);

    grp_sepImageFilter_hz_filter_fu_593 : component sepImageFilter_hz_filter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sepImageFilter_hz_filter_fu_593_ap_start,
        ap_done => grp_sepImageFilter_hz_filter_fu_593_ap_done,
        ap_idle => grp_sepImageFilter_hz_filter_fu_593_ap_idle,
        ap_ready => grp_sepImageFilter_hz_filter_fu_593_ap_ready,
        ap_ce => grp_sepImageFilter_hz_filter_fu_593_ap_ce,
        pixelIn_V => pixelIn_V_1_reg_1137,
        end_row_V => ap_reg_ppstg_ctrl_signals_end_row_V_reg_1112_pp0_iter3,
        new_row_V => ap_reg_ppstg_ctrl_signals_new_row_V_reg_1117_pp0_iter3,
        hz_coeff_0_V => hz_kernel_0_V_reg_967,
        hz_coeff_1_V => hz_kernel_1_V_reg_972,
        hz_coeff_2_V => hz_kernel_2_V_reg_977,
        hz_coeff_3_V => hz_kernel_3_V_reg_982,
        hz_coeff_4_V => hz_kernel_4_V_reg_987,
        hz_coeff_5_V => hz_kernel_5_V_reg_992,
        hz_coeff_6_V => hz_kernel_6_V_reg_997,
        ap_return => grp_sepImageFilter_hz_filter_fu_593_ap_return);

    call_ret_sepImageFilter_kernelSel_fu_626 : component sepImageFilter_kernelSel
    port map (
        select_V => call_ret_sepImageFilter_kernelSel_fu_626_select_V,
        hz_kernels_0_0_V => hz_kernels_0_0_V,
        hz_kernels_0_1_V => hz_kernels_0_1_V,
        hz_kernels_0_2_V => hz_kernels_0_2_V,
        hz_kernels_0_3_V => hz_kernels_0_3_V,
        hz_kernels_0_4_V => hz_kernels_0_4_V,
        hz_kernels_0_5_V => hz_kernels_0_5_V,
        hz_kernels_0_6_V => hz_kernels_0_6_V,
        hz_kernels_1_0_V => hz_kernels_1_0_V,
        hz_kernels_1_1_V => hz_kernels_1_1_V,
        hz_kernels_1_2_V => hz_kernels_1_2_V,
        hz_kernels_1_3_V => hz_kernels_1_3_V,
        hz_kernels_1_4_V => hz_kernels_1_4_V,
        hz_kernels_1_5_V => hz_kernels_1_5_V,
        hz_kernels_1_6_V => hz_kernels_1_6_V,
        hz_kernels_2_0_V => hz_kernels_2_0_V,
        hz_kernels_2_1_V => hz_kernels_2_1_V,
        hz_kernels_2_2_V => hz_kernels_2_2_V,
        hz_kernels_2_3_V => hz_kernels_2_3_V,
        hz_kernels_2_4_V => hz_kernels_2_4_V,
        hz_kernels_2_5_V => hz_kernels_2_5_V,
        hz_kernels_2_6_V => hz_kernels_2_6_V,
        vt_kernels_0_0_V => vt_kernels_0_0_V,
        vt_kernels_0_1_V => vt_kernels_0_1_V,
        vt_kernels_0_2_V => vt_kernels_0_2_V,
        vt_kernels_0_3_V => vt_kernels_0_3_V,
        vt_kernels_0_4_V => vt_kernels_0_4_V,
        vt_kernels_0_5_V => vt_kernels_0_5_V,
        vt_kernels_0_6_V => vt_kernels_0_6_V,
        vt_kernels_1_0_V => vt_kernels_1_0_V,
        vt_kernels_1_1_V => vt_kernels_1_1_V,
        vt_kernels_1_2_V => vt_kernels_1_2_V,
        vt_kernels_1_3_V => vt_kernels_1_3_V,
        vt_kernels_1_4_V => vt_kernels_1_4_V,
        vt_kernels_1_5_V => vt_kernels_1_5_V,
        vt_kernels_1_6_V => vt_kernels_1_6_V,
        vt_kernels_2_0_V => vt_kernels_2_0_V,
        vt_kernels_2_1_V => vt_kernels_2_1_V,
        vt_kernels_2_2_V => vt_kernels_2_2_V,
        vt_kernels_2_3_V => vt_kernels_2_3_V,
        vt_kernels_2_4_V => vt_kernels_2_4_V,
        vt_kernels_2_5_V => vt_kernels_2_5_V,
        vt_kernels_2_6_V => vt_kernels_2_6_V,
        divisor_0_V => divisor_0_V,
        divisor_1_V => divisor_1_V,
        divisor_2_V => divisor_2_V,
        ap_return_0 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_0,
        ap_return_1 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_1,
        ap_return_2 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_2,
        ap_return_3 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_3,
        ap_return_4 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_4,
        ap_return_5 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_5,
        ap_return_6 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_6,
        ap_return_7 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_7,
        ap_return_8 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_8,
        ap_return_9 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_9,
        ap_return_10 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_10,
        ap_return_11 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_11,
        ap_return_12 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_12,
        ap_return_13 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_13,
        ap_return_14 => call_ret_sepImageFilter_kernelSel_fu_626_ap_return_14);

    grp_sepImageFilter_controlUnit_fu_721 : component sepImageFilter_controlUnit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sepImageFilter_controlUnit_fu_721_ap_start,
        ap_done => grp_sepImageFilter_controlUnit_fu_721_ap_done,
        ap_idle => grp_sepImageFilter_controlUnit_fu_721_ap_idle,
        ap_ready => grp_sepImageFilter_controlUnit_fu_721_ap_ready,
        ap_ce => grp_sepImageFilter_controlUnit_fu_721_ap_ce,
        row_V => p_1_phi_fu_536_p4,
        col_V => p_2_reg_544,
        height_V => IMG_HEIGHT_V_read_reg_951,
        ap_return_0 => grp_sepImageFilter_controlUnit_fu_721_ap_return_0,
        ap_return_1 => grp_sepImageFilter_controlUnit_fu_721_ap_return_1,
        ap_return_2 => grp_sepImageFilter_controlUnit_fu_721_ap_return_2,
        ap_return_3 => grp_sepImageFilter_controlUnit_fu_721_ap_return_3,
        ap_return_4 => grp_sepImageFilter_controlUnit_fu_721_ap_return_4,
        ap_return_5 => grp_sepImageFilter_controlUnit_fu_721_ap_return_5,
        ap_return_6 => grp_sepImageFilter_controlUnit_fu_721_ap_return_6,
        ap_return_7 => grp_sepImageFilter_controlUnit_fu_721_ap_return_7);

    grp_sepImageFilter_axisInt_out_fu_738 : component sepImageFilter_axisInt_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sepImageFilter_axisInt_out_fu_738_ap_start,
        ap_done => grp_sepImageFilter_axisInt_out_fu_738_ap_done,
        ap_idle => grp_sepImageFilter_axisInt_out_fu_738_ap_idle,
        ap_ready => grp_sepImageFilter_axisInt_out_fu_738_ap_ready,
        video_out_TREADY => video_out_TREADY,
        ap_ce => grp_sepImageFilter_axisInt_out_fu_738_ap_ce,
        pixelOut_V => grp_sepImageFilter_division_fu_567_ap_return,
        start_output_V => ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter58,
        out_row_end_V => ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter58,
        video_out_TDATA => grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA,
        video_out_TVALID => grp_sepImageFilter_axisInt_out_fu_738_video_out_TVALID,
        video_out_TKEEP => grp_sepImageFilter_axisInt_out_fu_738_video_out_TKEEP,
        video_out_TSTRB => grp_sepImageFilter_axisInt_out_fu_738_video_out_TSTRB,
        video_out_TUSER => grp_sepImageFilter_axisInt_out_fu_738_video_out_TUSER,
        video_out_TLAST => grp_sepImageFilter_axisInt_out_fu_738_video_out_TLAST,
        video_out_TID => grp_sepImageFilter_axisInt_out_fu_738_video_out_TID,
        video_out_TDEST => grp_sepImageFilter_axisInt_out_fu_738_video_out_TDEST,
        video_out_TDATA_blk_n => grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA_blk_n);

    pixelIn_V_1_sepImageFilter_axisInt_in_fu_760 : component sepImageFilter_axisInt_in
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start,
        ap_done => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_done,
        ap_idle => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_idle,
        ap_ready => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ready,
        video_in_TDATA => video_in_TDATA,
        video_in_TVALID => video_in_TVALID,
        video_in_TREADY => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TREADY,
        video_in_TKEEP => video_in_TKEEP,
        video_in_TSTRB => video_in_TSTRB,
        video_in_TUSER => video_in_TUSER,
        video_in_TLAST => video_in_TLAST,
        video_in_TID => video_in_TID,
        video_in_TDEST => video_in_TDEST,
        finish_reads_V => ctrl_signals_finish_reads_V_reg_1102,
        reset_V => ctrl_signals_reset_V_reg_1127,
        pixelIn_V => pixelIn_V_phi_fu_524_p4,
        ap_return => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_return,
        video_in_TDATA_blk_n => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TDATA_blk_n,
        ap_ce => pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ce);

    sepImageFilter_mul_11ns_11ns_21_3_U153 : component sepImageFilter_mul_11ns_11ns_21_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_867_p0,
        din1 => grp_fu_867_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_867_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_sepImageFilter_axisInt_out_fu_738_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_sepImageFilter_axisInt_out_fu_738_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it58) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter57))) then 
                    ap_reg_grp_sepImageFilter_axisInt_out_fu_738_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sepImageFilter_axisInt_out_fu_738_ap_ready)) then 
                    ap_reg_grp_sepImageFilter_axisInt_out_fu_738_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_sepImageFilter_controlUnit_fu_721_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_sepImageFilter_controlUnit_fu_721_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = exitcond_fu_878_p2))) then 
                    ap_reg_grp_sepImageFilter_controlUnit_fu_721_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sepImageFilter_controlUnit_fu_721_ap_ready)) then 
                    ap_reg_grp_sepImageFilter_controlUnit_fu_721_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_sepImageFilter_hz_filter_fu_593_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_sepImageFilter_hz_filter_fu_593_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_reg_ppstg_exitcond_reg_1067_pp0_iter2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))))) then 
                    ap_reg_grp_sepImageFilter_hz_filter_fu_593_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sepImageFilter_hz_filter_fu_593_ap_ready)) then 
                    ap_reg_grp_sepImageFilter_hz_filter_fu_593_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_sepImageFilter_vt_filter_fu_574_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_sepImageFilter_vt_filter_fu_574_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter6))) then 
                    ap_reg_grp_sepImageFilter_vt_filter_fu_574_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_sepImageFilter_vt_filter_fu_574_ap_ready)) then 
                    ap_reg_grp_sepImageFilter_vt_filter_fu_574_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter1))) then 
                    ap_reg_pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ready)) then 
                    ap_reg_pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and not((ap_const_lv1_0 = exitcond_fu_878_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = exitcond_fu_878_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and not((ap_const_lv1_0 = exitcond_fu_878_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it46 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it46 <= ap_reg_ppiten_pp0_it45;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it47 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it47 <= ap_reg_ppiten_pp0_it46;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it48 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it48 <= ap_reg_ppiten_pp0_it47;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it49 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it49 <= ap_reg_ppiten_pp0_it48;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it50 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it50 <= ap_reg_ppiten_pp0_it49;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it51 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it51 <= ap_reg_ppiten_pp0_it50;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it52 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it52 <= ap_reg_ppiten_pp0_it51;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it53 <= ap_reg_ppiten_pp0_it52;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it54 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it54 <= ap_reg_ppiten_pp0_it53;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it55 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it55 <= ap_reg_ppiten_pp0_it54;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it56 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it56 <= ap_reg_ppiten_pp0_it55;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it57 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it57 <= ap_reg_ppiten_pp0_it56;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it58 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it58 <= ap_reg_ppiten_pp0_it57;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it59 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it59 <= ap_reg_ppiten_pp0_it58;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it60_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it60 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it60 <= ap_reg_ppiten_pp0_it59;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it60 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    p_1_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter1))) then 
                p_1_reg_532 <= p_s_reg_1087;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                p_1_reg_532 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_2_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (exitcond_reg_1067 = ap_const_lv1_0))) then 
                p_2_reg_544 <= p_s_6_fu_913_p3;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                p_2_reg_544 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_9_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = exitcond_fu_878_p2))) then 
                p_9_reg_556 <= indxPixel_V_fu_883_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                p_9_reg_556 <= ap_const_lv21_0;
            end if; 
        end if;
    end process;

    pixelIn_V_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter3))) then 
                pixelIn_V_reg_520 <= pixelIn_V_1_reg_1137;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                pixelIn_V_reg_520 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                IMG_HEIGHT_V_read_reg_951 <= IMG_HEIGHT_V;
                IMG_WIDTH_V_read_reg_956 <= IMG_WIDTH_V;
                div_V_reg_962 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_0;
                hz_kernel_0_V_reg_967 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_1;
                hz_kernel_1_V_reg_972 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_2;
                hz_kernel_2_V_reg_977 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_3;
                hz_kernel_3_V_reg_982 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_4;
                hz_kernel_4_V_reg_987 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_5;
                hz_kernel_5_V_reg_992 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_6;
                hz_kernel_6_V_reg_997 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_7;
                tmp_14_reg_1042 <= config_V(7 downto 7);
                tmp_9_reg_1037 <= tmp_9_fu_847_p2;
                vt_kernel_0_V_reg_1002 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_8;
                vt_kernel_1_V_reg_1007 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_9;
                vt_kernel_2_V_reg_1012 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_10;
                vt_kernel_3_V_reg_1017 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_11;
                vt_kernel_4_V_reg_1022 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_12;
                vt_kernel_5_V_reg_1027 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_13;
                vt_kernel_6_V_reg_1032 <= call_ret_sepImageFilter_kernelSel_fu_626_ap_return_14;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then
                ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter3 <= ctrl_signals_end_columns_V_reg_1122;
                ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter4 <= ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter3;
                ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter5 <= ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter4;
                ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter6 <= ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter5;
                ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter7 <= ap_reg_ppstg_ctrl_signals_end_columns_V_reg_1122_pp0_iter6;
                ap_reg_ppstg_ctrl_signals_end_row_V_reg_1112_pp0_iter3 <= ctrl_signals_end_row_V_reg_1112;
                ap_reg_ppstg_ctrl_signals_new_row_V_reg_1117_pp0_iter3 <= ctrl_signals_new_row_V_reg_1117;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter10 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter9;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter11 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter10;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter12 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter11;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter13 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter12;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter14 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter13;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter15 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter14;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter16 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter15;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter17 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter16;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter18 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter17;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter19 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter18;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter20 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter19;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter21 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter20;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter22 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter21;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter23 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter22;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter24 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter23;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter25 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter24;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter26 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter25;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter27 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter26;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter28 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter27;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter29 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter28;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter3 <= ctrl_signals_out_row_end_V_reg_1107;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter30 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter29;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter31 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter30;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter32 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter31;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter33 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter32;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter34 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter33;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter35 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter34;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter36 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter35;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter37 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter36;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter38 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter37;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter39 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter38;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter4 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter3;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter40 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter39;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter41 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter40;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter42 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter41;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter43 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter42;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter44 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter43;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter45 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter44;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter46 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter45;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter47 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter46;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter48 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter47;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter49 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter48;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter5 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter4;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter50 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter49;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter51 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter50;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter52 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter51;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter53 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter52;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter54 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter53;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter55 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter54;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter56 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter55;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter57 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter56;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter58 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter57;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter6 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter5;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter7 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter6;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter8 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter7;
                ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter9 <= ap_reg_ppstg_ctrl_signals_out_row_end_V_reg_1107_pp0_iter8;
                ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter3 <= ctrl_signals_row_to_duplicate_s_reg_1132;
                ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter4 <= ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter3;
                ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter5 <= ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter4;
                ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter6 <= ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter5;
                ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter7 <= ap_reg_ppstg_ctrl_signals_row_to_duplicate_s_reg_1132_pp0_iter6;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter10 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter9;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter11 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter10;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter12 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter11;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter13 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter12;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter14 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter13;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter15 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter14;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter16 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter15;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter17 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter16;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter18 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter17;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter19 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter18;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter20 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter19;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter21 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter20;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter22 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter21;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter23 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter22;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter24 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter23;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter25 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter24;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter26 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter25;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter27 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter26;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter28 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter27;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter29 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter28;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter3 <= ctrl_signals_start_output_V_reg_1097;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter30 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter29;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter31 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter30;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter32 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter31;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter33 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter32;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter34 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter33;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter35 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter34;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter36 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter35;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter37 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter36;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter38 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter37;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter39 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter38;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter4 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter3;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter40 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter39;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter41 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter40;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter42 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter41;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter43 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter42;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter44 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter43;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter45 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter44;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter46 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter45;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter47 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter46;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter48 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter47;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter49 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter48;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter5 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter4;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter50 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter49;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter51 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter50;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter52 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter51;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter53 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter52;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter54 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter53;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter55 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter54;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter56 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter55;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter57 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter56;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter58 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter57;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter6 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter5;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter7 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter6;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter8 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter7;
                ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter9 <= ap_reg_ppstg_ctrl_signals_start_output_V_reg_1097_pp0_iter8;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter10 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter9;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter11 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter10;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter12 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter11;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter13 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter12;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter14 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter13;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter15 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter14;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter16 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter15;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter17 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter16;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter18 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter17;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter19 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter18;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter2 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter1;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter20 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter19;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter21 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter20;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter22 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter21;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter23 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter22;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter24 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter23;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter25 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter24;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter26 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter25;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter27 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter26;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter28 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter27;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter29 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter28;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter3 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter2;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter30 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter29;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter31 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter30;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter32 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter31;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter33 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter32;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter34 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter33;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter35 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter34;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter36 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter35;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter37 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter36;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter38 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter37;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter39 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter38;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter4 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter3;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter40 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter39;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter41 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter40;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter42 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter41;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter43 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter42;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter44 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter43;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter45 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter44;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter46 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter45;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter47 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter46;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter48 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter47;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter49 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter48;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter5 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter4;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter50 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter49;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter51 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter50;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter52 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter51;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter53 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter52;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter54 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter53;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter55 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter54;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter56 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter55;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter57 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter56;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter58 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter57;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter59 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter58;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter6 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter5;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter7 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter6;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter8 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter7;
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter9 <= ap_reg_ppstg_exitcond_reg_1067_pp0_iter8;
                ap_reg_ppstg_p_2_reg_544_pp0_iter2 <= ap_reg_ppstg_p_2_reg_544_pp0_iter1;
                ap_reg_ppstg_p_2_reg_544_pp0_iter3 <= ap_reg_ppstg_p_2_reg_544_pp0_iter2;
                ap_reg_ppstg_p_2_reg_544_pp0_iter4 <= ap_reg_ppstg_p_2_reg_544_pp0_iter3;
                ap_reg_ppstg_p_2_reg_544_pp0_iter5 <= ap_reg_ppstg_p_2_reg_544_pp0_iter4;
                ap_reg_ppstg_p_2_reg_544_pp0_iter6 <= ap_reg_ppstg_p_2_reg_544_pp0_iter5;
                ap_reg_ppstg_p_2_reg_544_pp0_iter7 <= ap_reg_ppstg_p_2_reg_544_pp0_iter6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))))) then
                ap_reg_ppstg_exitcond_reg_1067_pp0_iter1 <= exitcond_reg_1067;
                ap_reg_ppstg_p_2_reg_544_pp0_iter1 <= p_2_reg_544;
                exitcond_reg_1067 <= exitcond_fu_878_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter1))) then
                ctrl_signals_end_columns_V_reg_1122 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_5;
                ctrl_signals_end_row_V_reg_1112 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_3;
                ctrl_signals_finish_reads_V_reg_1102 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_1;
                ctrl_signals_new_row_V_reg_1117 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_4;
                ctrl_signals_out_row_end_V_reg_1107 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_2;
                ctrl_signals_reset_V_reg_1127 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_6;
                ctrl_signals_row_to_duplicate_s_reg_1132 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_7;
                ctrl_signals_start_output_V_reg_1097 <= grp_sepImageFilter_controlUnit_fu_721_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (ap_const_lv1_0 = exitcond_fu_878_p2))) then
                indxCol_V_reg_1076 <= indxCol_V_fu_889_p2;
                tmp_4_reg_1081 <= tmp_4_fu_895_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and (exitcond_reg_1067 = ap_const_lv1_0))) then
                p_s_reg_1087 <= p_s_fu_906_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_reg_ppstg_exitcond_reg_1067_pp0_iter2 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))))) then
                pixelIn_V_1_reg_1137 <= pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                tmp_1_reg_1057 <= grp_fu_867_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                tmp_2_reg_1062 <= tmp_2_fu_873_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it59, ap_reg_ppiten_pp0_it60, ap_sig_283, ap_sig_287, exitcond_fu_878_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
            when ap_ST_pp0_stg0_fsm_5 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it59)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and not((ap_const_lv1_0 = exitcond_fu_878_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it59))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and not((ap_const_lv1_0 = exitcond_fu_878_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st67_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                end if;
            when ap_ST_st67_fsm_6 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st67_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st67_fsm_6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st67_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st67_fsm_6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_1413_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_1413 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_24_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_24 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_279_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_279 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_283_assign_proc : process(pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TDATA_blk_n, ap_reg_ppstg_exitcond_reg_1067_pp0_iter2)
    begin
                ap_sig_283 <= ((ap_reg_ppstg_exitcond_reg_1067_pp0_iter2 = ap_const_lv1_0) and (pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TDATA_blk_n = ap_const_logic_0));
    end process;


    ap_sig_287_assign_proc : process(grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA_blk_n, ap_reg_ppstg_exitcond_reg_1067_pp0_iter59)
    begin
                ap_sig_287 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter59) and (grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA_blk_n = ap_const_logic_0));
    end process;


    ap_sig_357_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_357 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_368_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_368 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_377_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_377 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_5_assign_proc : process(ap_sig_279)
    begin
        if (ap_sig_279) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_24)
    begin
        if (ap_sig_24) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_357)
    begin
        if (ap_sig_357) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_368)
    begin
        if (ap_sig_368) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_377)
    begin
        if (ap_sig_377) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st67_fsm_6_assign_proc : process(ap_sig_1413)
    begin
        if (ap_sig_1413) then 
            ap_sig_cseq_ST_st67_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st67_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;

    call_ret_sepImageFilter_kernelSel_fu_626_select_V <= config_V(6 - 1 downto 0);
    exitcond_fu_878_p2 <= "1" when (p_9_reg_556 = tmp_2_reg_1062) else "0";
    grp_fu_867_p0 <= grp_fu_867_p00(11 - 1 downto 0);
    grp_fu_867_p00 <= std_logic_vector(resize(unsigned(IMG_WIDTH_V_read_reg_956),21));
    grp_fu_867_p1 <= grp_fu_867_p10(11 - 1 downto 0);
    grp_fu_867_p10 <= std_logic_vector(resize(unsigned(tmp_9_reg_1037),21));

    grp_sepImageFilter_axisInt_out_fu_738_ap_ce_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond_reg_1067_pp0_iter59, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_283, ap_reg_ppstg_exitcond_reg_1067_pp0_iter58)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter59) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter58)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283)))) then 
            grp_sepImageFilter_axisInt_out_fu_738_ap_ce <= ap_const_logic_1;
        else 
            grp_sepImageFilter_axisInt_out_fu_738_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sepImageFilter_axisInt_out_fu_738_ap_start <= ap_reg_grp_sepImageFilter_axisInt_out_fu_738_ap_start;

    grp_sepImageFilter_controlUnit_fu_721_ap_ce_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it60, exitcond_reg_1067, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_283, ap_sig_287, ap_reg_ppstg_exitcond_reg_1067_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and ((exitcond_reg_1067 = ap_const_lv1_0) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter1)))) then 
            grp_sepImageFilter_controlUnit_fu_721_ap_ce <= ap_const_logic_1;
        else 
            grp_sepImageFilter_controlUnit_fu_721_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sepImageFilter_controlUnit_fu_721_ap_start <= ap_reg_grp_sepImageFilter_controlUnit_fu_721_ap_start;

    grp_sepImageFilter_division_fu_567_ap_ce_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_283, ap_sig_287)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))))) then 
            grp_sepImageFilter_division_fu_567_ap_ce <= ap_const_logic_1;
        else 
            grp_sepImageFilter_division_fu_567_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sepImageFilter_hz_filter_fu_593_ap_ce_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_283, ap_sig_287, ap_reg_ppstg_exitcond_reg_1067_pp0_iter3, ap_reg_ppstg_exitcond_reg_1067_pp0_iter4, ap_reg_ppstg_exitcond_reg_1067_pp0_iter5, ap_reg_ppstg_exitcond_reg_1067_pp0_iter6, ap_reg_ppstg_exitcond_reg_1067_pp0_iter7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter7) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter4) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter5) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter6)))) then 
            grp_sepImageFilter_hz_filter_fu_593_ap_ce <= ap_const_logic_1;
        else 
            grp_sepImageFilter_hz_filter_fu_593_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sepImageFilter_hz_filter_fu_593_ap_start <= ap_reg_grp_sepImageFilter_hz_filter_fu_593_ap_start;

    grp_sepImageFilter_vt_filter_fu_574_ap_ce_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_283, ap_sig_287, ap_reg_ppstg_exitcond_reg_1067_pp0_iter7, ap_reg_ppstg_exitcond_reg_1067_pp0_iter8, ap_reg_ppstg_exitcond_reg_1067_pp0_iter9, ap_reg_ppstg_exitcond_reg_1067_pp0_iter10, ap_reg_ppstg_exitcond_reg_1067_pp0_iter11, ap_reg_ppstg_exitcond_reg_1067_pp0_iter12, ap_reg_ppstg_exitcond_reg_1067_pp0_iter13, ap_reg_ppstg_exitcond_reg_1067_pp0_iter14, ap_reg_ppstg_exitcond_reg_1067_pp0_iter15, ap_reg_ppstg_exitcond_reg_1067_pp0_iter16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_283) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter16) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter7) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter8) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter9) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter10) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter11) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter12) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter13) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter14) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter15)))) then 
            grp_sepImageFilter_vt_filter_fu_574_ap_ce <= ap_const_logic_1;
        else 
            grp_sepImageFilter_vt_filter_fu_574_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sepImageFilter_vt_filter_fu_574_ap_start <= ap_reg_grp_sepImageFilter_vt_filter_fu_574_ap_start;
    indxCol_V_fu_889_p2 <= std_logic_vector(unsigned(p_2_phi_fu_548_p4) + unsigned(ap_const_lv11_1));
    indxPixel_V_fu_883_p2 <= std_logic_vector(unsigned(p_9_reg_556) + unsigned(ap_const_lv21_1));
    indxRow_V_fu_900_p2 <= std_logic_vector(unsigned(p_1_phi_fu_536_p4) + unsigned(ap_const_lv11_1));

    p_1_phi_fu_536_p4_assign_proc : process(ap_reg_ppiten_pp0_it2, p_1_reg_532, ap_reg_ppstg_exitcond_reg_1067_pp0_iter1, p_s_reg_1087)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter1))) then 
            p_1_phi_fu_536_p4 <= p_s_reg_1087;
        else 
            p_1_phi_fu_536_p4 <= p_1_reg_532;
        end if; 
    end process;


    p_2_phi_fu_548_p4_assign_proc : process(ap_reg_ppiten_pp0_it1, exitcond_reg_1067, p_2_reg_544, ap_sig_cseq_ST_pp0_stg0_fsm_5, p_s_6_fu_913_p3)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (exitcond_reg_1067 = ap_const_lv1_0))) then 
            p_2_phi_fu_548_p4 <= p_s_6_fu_913_p3;
        else 
            p_2_phi_fu_548_p4 <= p_2_reg_544;
        end if; 
    end process;

    p_s_6_fu_913_p3 <= 
        ap_const_lv11_0 when (tmp_4_reg_1081(0) = '1') else 
        indxCol_V_reg_1076;
    p_s_fu_906_p3 <= 
        indxRow_V_fu_900_p2 when (tmp_4_reg_1081(0) = '1') else 
        p_1_phi_fu_536_p4;

    pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ce_assign_proc : process(ap_reg_ppiten_pp0_it60, ap_reg_ppstg_exitcond_reg_1067_pp0_iter2, ap_sig_cseq_ST_pp0_stg0_fsm_5, ap_sig_287)
    begin
        if (((ap_reg_ppstg_exitcond_reg_1067_pp0_iter2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and ap_sig_287)))) then 
            pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ce <= ap_const_logic_1;
        else 
            pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start <= ap_reg_pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_ap_start;

    pixelIn_V_phi_fu_524_p4_assign_proc : process(ap_reg_ppiten_pp0_it4, pixelIn_V_reg_520, ap_reg_ppstg_exitcond_reg_1067_pp0_iter3, pixelIn_V_1_reg_1137)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter3))) then 
            pixelIn_V_phi_fu_524_p4 <= pixelIn_V_1_reg_1137;
        else 
            pixelIn_V_phi_fu_524_p4 <= pixelIn_V_reg_520;
        end if; 
    end process;

    tmp_2_fu_873_p2 <= std_logic_vector(unsigned(ap_const_lv21_4) + unsigned(tmp_1_reg_1057));
    tmp_4_fu_895_p2 <= "1" when (indxCol_V_fu_889_p2 = IMG_WIDTH_V_read_reg_956) else "0";
    tmp_9_fu_847_p2 <= std_logic_vector(unsigned(ap_const_lv11_3) + unsigned(IMG_HEIGHT_V));

    video_in_TDATA_blk_n_assign_proc : process(pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TDATA_blk_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond_reg_1067_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_reg_ppstg_exitcond_reg_1067_pp0_iter2 = ap_const_lv1_0))) then 
            video_in_TDATA_blk_n <= pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TDATA_blk_n;
        else 
            video_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    video_in_TREADY <= pixelIn_V_1_sepImageFilter_axisInt_in_fu_760_video_in_TREADY;
    video_out_TDATA <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA;

    video_out_TDATA_blk_n_assign_proc : process(ap_reg_ppiten_pp0_it60, grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA_blk_n, ap_reg_ppstg_exitcond_reg_1067_pp0_iter59)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it60) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_1067_pp0_iter59))) then 
            video_out_TDATA_blk_n <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TDATA_blk_n;
        else 
            video_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    video_out_TDEST <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TDEST;
    video_out_TID <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TID;
    video_out_TKEEP <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TKEEP;
    video_out_TLAST <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TLAST;
    video_out_TSTRB <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TSTRB;
    video_out_TUSER <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TUSER;
    video_out_TVALID <= grp_sepImageFilter_axisInt_out_fu_738_video_out_TVALID;
end behav;
