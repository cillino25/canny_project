-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sepImageFilter_controlUnit is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    row_V : IN STD_LOGIC_VECTOR (10 downto 0);
    col_V : IN STD_LOGIC_VECTOR (10 downto 0);
    height_V : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of sepImageFilter_controlUnit is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_18 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal finish_reads_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal start_output_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal duplicated_row_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal end_columns_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal or_cond_fu_66_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_376 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_382 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_400 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_405 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_410 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_415 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_108_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_reg_420 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_425 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_431 : STD_LOGIC_VECTOR (0 downto 0);
    signal finish_reads_V_new_1_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal finish_reads_V_flag_1_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_output_V_flag_1_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_row_to_duplicate_V_write_s_fu_270_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal end_columns_V_flag_1_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_54_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_60_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_cast_fu_112_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_cast_fu_126_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_fu_116_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_1_fu_136_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_cast4_fu_122_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_1_cast_fu_142_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_cond1_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_182_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_start_output_V_load_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_187_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_end_columns_V_load_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_reset_V_write_assign_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_5_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_finish_reads_V_load_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_8_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_start_output_V_load_9_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_storemerge_fu_215_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_9_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_end_columns_V_load_10_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_start_output_V_write_assi_fu_263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_finish_reads_V_write_assi_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_out_row_end_V_write_assig_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_end_row_V_write_assign_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_new_row_V_write_assign_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_end_columns_V_write_assig_fu_282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = tmp_5_reg_382)))) then
                duplicated_row_V <= ctrl_row_to_duplicate_V_write_s_fu_270_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = end_columns_V_flag_1_fu_277_p2)))) then
                end_columns_V <= finish_reads_V_new_1_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = finish_reads_V_flag_1_fu_236_p2)))) then
                finish_reads_V <= finish_reads_V_new_1_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                or_cond_reg_376 <= or_cond_fu_66_p2;
                tmp_16_reg_420 <= tmp_16_fu_108_p1;
                tmp_1_reg_405 <= tmp_1_fu_90_p2;
                tmp_2_reg_431 <= tmp_2_fu_146_p2;
                tmp_4_reg_425 <= tmp_4_fu_130_p2;
                tmp_5_reg_382 <= tmp_5_fu_72_p2;
                tmp_6_reg_394 <= tmp_6_fu_78_p2;
                tmp_7_reg_410 <= tmp_7_fu_96_p2;
                tmp_8_reg_415 <= tmp_8_fu_102_p2;
                tmp_9_reg_400 <= tmp_9_fu_84_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = start_output_V_flag_1_fu_258_p2)))) then
                start_output_V <= finish_reads_V_new_1_fu_246_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_ce)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_ppiten_pp0_it0 <= ap_start;
    ap_return_0 <= ctrl_start_output_V_write_assi_fu_263_p3;
    ap_return_1 <= ctrl_finish_reads_V_write_assi_fu_252_p2;
    ap_return_2 <= ctrl_out_row_end_V_write_assig_fu_299_p2;
    ap_return_3 <= ctrl_end_row_V_write_assign_fu_289_p2;
    ap_return_4 <= ctrl_new_row_V_write_assign_fu_294_p2;
    ap_return_5 <= ctrl_end_columns_V_write_assig_fu_282_p3;
    ap_return_6 <= ctrl_reset_V_write_assign_fu_232_p2;
    ap_return_7 <= ctrl_row_to_duplicate_V_write_s_fu_270_p3;

    ap_sig_18_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_18 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_18)
    begin
        if (ap_sig_18) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ctrl_end_columns_V_write_assig_fu_282_p3 <= 
        p_end_columns_V_load_10_fu_226_p2 when (tmp_5_reg_382(0) = '1') else 
        end_columns_V;
    ctrl_end_row_V_write_assign_fu_289_p2 <= (tmp_7_reg_410 and not_tmp_5_fu_241_p2);
    ctrl_finish_reads_V_write_assi_fu_252_p2 <= (p_finish_reads_V_load_fu_156_p2 and finish_reads_V_new_1_fu_246_p2);
    ctrl_new_row_V_write_assign_fu_294_p2 <= (tmp_5_reg_382 and not_tmp_s_fu_200_p2);
    ctrl_out_row_end_V_write_assig_fu_299_p2 <= (tmp_8_reg_415 and not_tmp_5_fu_241_p2);
    ctrl_reset_V_write_assign_fu_232_p2 <= (tmp_5_reg_382 and tmp_2_reg_431);
    ctrl_row_to_duplicate_V_write_s_fu_270_p3 <= 
        p_storemerge_fu_215_p3 when (tmp_5_reg_382(0) = '1') else 
        duplicated_row_V;
    ctrl_start_output_V_write_assi_fu_263_p3 <= 
        p_start_output_V_load_9_fu_209_p2 when (tmp_5_reg_382(0) = '1') else 
        start_output_V;
    end_columns_V_flag_1_fu_277_p2 <= (tmp_5_reg_382 and p_9_fu_222_p2);
    finish_reads_V_flag_1_fu_236_p2 <= (or_cond_reg_376 or ctrl_reset_V_write_assign_fu_232_p2);
    finish_reads_V_new_1_fu_246_p2 <= (not_tmp_5_fu_241_p2 or not_tmp_s_fu_200_p2);
    lhs_V_cast_fu_112_p1 <= std_logic_vector(resize(unsigned(height_V),12));
    not_tmp_5_fu_241_p2 <= (tmp_5_reg_382 xor ap_const_lv1_1);
    not_tmp_s_fu_200_p2 <= (tmp_2_reg_431 xor ap_const_lv1_1);
    or_cond1_fu_178_p2 <= (tmp_9_reg_400 and tmp_1_reg_405);
    or_cond_fu_66_p2 <= (tmp_fu_54_p2 and tmp_s_fu_60_p2);
    p_8_fu_205_p2 <= (tmp_2_reg_431 or tmp_6_reg_394);
    p_9_fu_222_p2 <= (tmp_2_reg_431 or tmp_4_reg_425);
    p_end_columns_V_load_10_fu_226_p2 <= (p_end_columns_V_load_fu_195_p2 and not_tmp_s_fu_200_p2);
    p_end_columns_V_load_fu_195_p2 <= (end_columns_V or tmp_4_reg_425);
    p_finish_reads_V_load_fu_156_p2 <= (finish_reads_V or or_cond_reg_376);
    p_start_output_V_load_9_fu_209_p2 <= (p_start_output_V_load_fu_173_p2 and not_tmp_s_fu_200_p2);
    p_start_output_V_load_fu_173_p2 <= (start_output_V or tmp_6_reg_394);
    p_storemerge_fu_215_p3 <= 
        ap_const_lv3_0 when (tmp_2_reg_431(0) = '1') else 
        storemerge_fu_187_p3;
    r_V_1_cast_fu_142_p1 <= std_logic_vector(resize(unsigned(r_V_1_fu_136_p2),13));
    r_V_1_fu_136_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) + unsigned(lhs_V_cast_fu_112_p1));
    r_V_fu_116_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(lhs_V_cast_fu_112_p1));
    start_output_V_flag_1_fu_258_p2 <= (tmp_5_reg_382 and p_8_fu_205_p2);
    storemerge_fu_187_p3 <= 
        tmp_3_fu_182_p2 when (or_cond1_fu_178_p2(0) = '1') else 
        ap_const_lv3_0;
    tmp_13_cast4_fu_122_p1 <= std_logic_vector(resize(unsigned(row_V),13));
    tmp_13_cast_fu_126_p1 <= std_logic_vector(resize(unsigned(row_V),12));
    tmp_16_fu_108_p1 <= row_V(3 - 1 downto 0);
    tmp_1_fu_90_p2 <= "1" when (unsigned(row_V) < unsigned(ap_const_lv11_6)) else "0";
    tmp_2_fu_146_p2 <= "1" when (tmp_13_cast4_fu_122_p1 = r_V_1_cast_fu_142_p1) else "0";
    tmp_3_fu_182_p2 <= std_logic_vector(signed(ap_const_lv3_6) - signed(tmp_16_reg_420));
    tmp_4_fu_130_p2 <= "1" when (signed(tmp_13_cast_fu_126_p1) > signed(r_V_fu_116_p2)) else "0";
    tmp_5_fu_72_p2 <= "1" when (col_V = ap_const_lv11_3) else "0";
    tmp_6_fu_78_p2 <= "1" when (row_V = ap_const_lv11_3) else "0";
    tmp_7_fu_96_p2 <= "1" when (unsigned(col_V) < unsigned(ap_const_lv11_3)) else "0";
    tmp_8_fu_102_p2 <= "1" when (col_V = ap_const_lv11_2) else "0";
    tmp_9_fu_84_p2 <= "1" when (unsigned(row_V) > unsigned(ap_const_lv11_2)) else "0";
    tmp_fu_54_p2 <= "1" when (row_V = height_V) else "0";
    tmp_s_fu_60_p2 <= "1" when (col_V = ap_const_lv11_0) else "0";
end behav;
